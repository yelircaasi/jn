'''
ACCESS_TOKEN_PLACEHOLDER
ALL
AsyncClient
AsyncClientConfig
BaseDirectory
CHECK
CREDENTIALS_DIR_LASTRESORT
CREDENTIALS_FILE_DEFAULT
Callbacks
ClientConnectorError
ClientSession
ContentRepositoryConfigError
DEFAULT_SEPARATOR
DEVICE_ID_PLACEHOLDER
DeleteDevicesAuthResponse
DeleteDevicesError
DevicesError
DiscoveryInfoError
DownloadError
EMOJI
EnableEncryptionBuilder
EncryptionError
ErrorResponse
FOREVER
GetOpenIDTokenError
GlobalState
HAVE_NOTIFY
HAVE_OPENID
HOMESERVER_PLACEHOLDER
HOSTNAME_PLACEHOLDER
INVITES_JOIN
INVITES_LIST
INVITES_LIST_JOIN
INVITES_UNUSED_DEFAULT
INVITES_USED_DEFAULT
Image
InviteMemberEvent
JoinError
JoinedMembersError
JoinedRoomsError
KeyVerificationCancel
KeyVerificationEvent
KeyVerificationKey
KeyVerificationMac
KeyVerificationStart
LISTEN_DEFAULT
Literal
LocalProtocolError
LoginInfoError
LoginResponse
LogoutError
LooseVersion
MEDIA_DIR_DEFAULT
MEDIA_NAME_CLEAN
MEDIA_NAME_CLEAN_CHARS
MEDIA_NAME_DEFAULT
MEDIA_NAME_EVENTID
MEDIA_NAME_SOURCE
MEDIA_NAME_TIME
MXC_ID_PLACEHOLDER
MatrixCommanderError
MatrixCommanderWarning
MatrixRoom
MessageDirection
NEVER
NO_SSL_UNUSED_DEFAULT
ONCE
OUTPUT_DEFAULT
OUTPUT_JSON
OUTPUT_JSON_MAX
OUTPUT_JSON_SPEC
OUTPUT_TEXT
Optional
PID_DIR_DEFAULT
PID_FILE_DEFAULT
PRINT
PROG_WITHOUT_EXT
PROG_WITH_EXT
PresenceGetError
PresenceSetError
ProfileGetAvatarResponse
ProfileGetDisplayNameError
ProfileGetError
ProfileSetAvatarResponse
ProfileSetDisplayNameError
README_FILE_RAW_URL
ROOM_ID_PLACEHOLDER
R_OK
RedactedEvent
RedactionEvent
RoomAliasEvent
RoomBanError
RoomCreateError
RoomDeleteAliasResponse
RoomEncryptedAudio
RoomEncryptedFile
RoomEncryptedImage
RoomEncryptedMedia
RoomEncryptedVideo
RoomEncryptionEvent
RoomForgetError
RoomGetStateResponse
RoomGetVisibilityResponse
RoomInviteError
RoomKickError
RoomLeaveError
RoomMemberEvent
RoomMessage
RoomMessageAudio
RoomMessageEmote
RoomMessageFile
RoomMessageFormatted
RoomMessageImage
RoomMessageMedia
RoomMessageNotice
RoomMessageText
RoomMessageUnknown
RoomMessageVideo
RoomMessagesError
RoomNameEvent
RoomPreset
RoomPutAliasResponse
RoomReadMarkersError
RoomRedactError
RoomResolveAliasError
RoomResolveAliasResponse
RoomSendError
RoomUnbanError
RoomVisibility
SEP
SET_DEVICE_NAME_UNUSED_DEFAULT
SET_DISPLAY_NAME_UNUSED_DEFAULT
SSLContext
SSL_CERTIFICATE_DEFAULT
STORE_DIR_DEFAULT
STORE_DIR_LASTRESORT
STORE_PATH_LASTRESORT
SYNC_DEFAULT
SYNC_FULL
SYNC_OFF
SyncError
SyncResponse
TAIL
TAIL_UNUSED_DEFAULT
TAIL_USED_DEFAULT
TCPConnector
ToDeviceError
USER_ID_PLACEHOLDER
Union
UnknownEvent
UpdateDeviceError
UploadError
UploadResponse
VERIFY_UNUSED_DEFAULT
VERIFY_USED_DEFAULT
VERSION
VERSIONNR
VERSION_UNUSED_DEFAULT
VERSION_USED_DEFAULT
__builtins__
__cached__
__doc__
__file__
__loader__
__name__
__package__
__spec__
__warningregistry__
access
action_content_repository_config
action_delete_device
action_delete_mxc
action_delete_mxc_before
action_devices
action_discovery_info
action_download
action_export_keys
action_get_avatar
action_get_client_info
action_get_display_name
action_get_openid_token
action_get_presence
action_get_profile
action_get_room_info
action_has_permission
action_import_keys
action_joined_dm_rooms
action_joined_members
action_joined_rooms
action_listen
action_login
action_login_info
action_logout
action_mxc_to_http
action_rest
action_room_ban
action_room_create
action_room_delete_alias
action_room_dm_create
action_room_forget
action_room_get_state
action_room_get_visibility
action_room_invite
action_room_join
action_room_kick
action_room_leave
action_room_redact
action_room_resolve_alias
action_room_set_alias
action_room_unban
action_roomsetget
action_send
action_set_avatar
action_set_device_name
action_set_display_name
action_set_presence
action_upload
action_verify
action_whoami
aiofiles
argparse
ast
async_main
asyncio
check_arg_files_readable
check_download_media_dir
check_version
choose_available_filename
cleanup
colors
create_pid_file
credentials_exist
crypto
datetime
default_homeserver
delete_pid_file
derive_media_filename_with_path
determine_credentials_file
determine_dm_rooms
determine_dm_rooms_for_user
determine_rooms
determine_store_dir
download_mxc
emoji
errno
get_avatar_url
get_messages_from_keyboard
get_messages_from_pipe
get_qualifiedclassname
getpass
implicit_login
initial_check_of_args
initial_check_of_log_args
is_partial_user_id
is_room
is_room_alias
is_room_id
is_short_room_alias
is_short_user_id
is_user
is_user_id
isfile
json
listen_all
listen_forever
listen_invites_once
listen_once
listen_once_alternative
listen_tail
logging
login_using_credentials_file
magic
main
main_inner
map_roomalias_to_roomid
map_roominfo_to_roomid
markdown
notify
obj_to_dict
os
pkg_resources
print_output
privacy_filter
process_arguments_and_input
quote
re
read_all_events_in_direction
read_credentials_from_disk
responses
room_alias_to_short_room_alias
rooms_to_long_room_names
select
send_event
send_file
send_image
send_message
send_messages_and_files
short_room_alias_to_room_alias
short_user_name_to_user_id
shutil
ssl
store_create
store_delete
store_exists
stream_messages_from_pipe
subprocess
synchronize
sys
tempfile
textwrap
traceback
urllib
urlparse
user_id_to_short_user_name
uuid
version
web
write_credentials_to_disk
zn
'''
import subprocess

# from matrix_commander import matrix_commander as mc
# maybe use this instead: https://matrix-nio.readthedocs.io/en/latest/
# extract the useful code to make it cleaner than just running a subprocess

# matrix-commander -c /home/isaac/.config/matrix-commander/credentials.json -r '!KeeTeSkGHgkKZTrbpT:matrix.org' --listen-self --listen tail  --tail 15
args = [
    "matrix-commander",
    "-c",
    "/home/isaac/.config/matrix-commander/credentials.json",
    "-s",
    "/home/isaac/.config/matrix-commander/",
    "-r",
    "'!KeeTeSkGHgkKZTrbpT:matrix.org'",
    "--listen-self",
    "--listen",
    "tail",
    "--tail",
    "15"
]


# cp = subprocess.run(args, capture_output=True, text=True)
# print("---------")
# print(cp.stdout)

# mc.main_inner(argv=args)

# Run the command and capture the output
try:
    output = subprocess.check_output(args, text=True)
    print("Output:")
    print(output)
except subprocess.CalledProcessError as e:
    print("Error (if any):")
    print(e.output)